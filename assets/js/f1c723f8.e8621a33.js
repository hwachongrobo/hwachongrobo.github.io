"use strict";(self.webpackChunkhwachongrobotics_github_io=self.webpackChunkhwachongrobotics_github_io||[]).push([[399],{3905:function(e,r,t){t.d(r,{Zo:function(){return u},kt:function(){return f}});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=n.createContext({}),c=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},u=function(e){var r=c(e.components);return n.createElement(l.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=c(t),f=o,d=m["".concat(l,".").concat(f)]||m[f]||p[f]||a;return t?n.createElement(d,i(i({ref:r},u),{},{components:t})):n.createElement(d,i({ref:r},u))}));function f(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=m;var s={};for(var l in r)hasOwnProperty.call(r,l)&&(s[l]=r[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=t[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},8215:function(e,r,t){var n=t(7294);r.Z=function(e){var r=e.children,t=e.hidden,o=e.className;return n.createElement("div",{role:"tabpanel",hidden:t,className:o},r)}},5064:function(e,r,t){t.d(r,{Z:function(){return p}});var n=t(7294),o=t(9443);var a=function(){var e=(0,n.useContext)(o.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},i=t(6010),s="tabItem_1uMI",l="tabItemActive_2DSg";var c=37,u=39;var p=function(e){var r=e.lazy,t=e.block,o=e.defaultValue,p=e.values,m=e.groupId,f=e.className,d=a(),h=d.tabGroupChoices,b=d.setTabGroupChoices,v=(0,n.useState)(o),y=v[0],g=v[1],k=n.Children.toArray(e.children),w=[];if(null!=m){var _=h[m];null!=_&&_!==y&&p.some((function(e){return e.value===_}))&&g(_)}var E=function(e){var r=e.currentTarget,t=w.indexOf(r),n=p[t].value;g(n),null!=m&&(b(m,n),setTimeout((function(){var e,t,n,o,a,i,s,c;(e=r.getBoundingClientRect(),t=e.top,n=e.left,o=e.bottom,a=e.right,i=window,s=i.innerHeight,c=i.innerWidth,t>=0&&a<=c&&o<=s&&n>=0)||(r.scrollIntoView({block:"center",behavior:"smooth"}),r.classList.add(l),setTimeout((function(){return r.classList.remove(l)}),2e3))}),150))},P=function(e){var r,t;switch(e.keyCode){case u:var n=w.indexOf(e.target)+1;t=w[n]||w[0];break;case c:var o=w.indexOf(e.target)-1;t=w[o]||w[w.length-1]}null==(r=t)||r.focus()};return n.createElement("div",{className:"tabs-container"},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":t},f)},p.map((function(e){var r=e.value,t=e.label;return n.createElement("li",{role:"tab",tabIndex:y===r?0:-1,"aria-selected":y===r,className:(0,i.Z)("tabs__item",s,{"tabs__item--active":y===r}),key:r,ref:function(e){return w.push(e)},onKeyDown:P,onFocus:E,onClick:E},t)}))),r?(0,n.cloneElement)(k.filter((function(e){return e.props.value===y}))[0],{className:"margin-vert--md"}):n.createElement("div",{className:"margin-vert--md"},k.map((function(e,r){return(0,n.cloneElement)(e,{key:r,hidden:e.props.value!==y})}))))}},9443:function(e,r,t){var n=(0,t(7294).createContext)(void 0);r.Z=n},9293:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return c},contentTitle:function(){return u},metadata:function(){return p},toc:function(){return m},default:function(){return d}});var n=t(7462),o=t(3366),a=(t(7294),t(3905)),i=t(5064),s=t(8215),l=["components"],c={},u="Pybricks",p={unversionedId:"lego/programming/pybricks",id:"lego/programming/pybricks",isDocsHomePage:!1,title:"Pybricks",description:"Pybricks is an alternative method of programming for EV3 Mindstorms endorsed by",source:"@site/docs/lego/02-programming/01-pybricks.mdx",sourceDirName:"lego/02-programming",slug:"/lego/programming/pybricks",permalink:"/lego/programming/pybricks",editUrl:"https://github.com/hwachongrobotics/hwachongrobotics.github.io/edit/main/docs/lego/02-programming/01-pybricks.mdx",version:"current",lastUpdatedAt:1637034045,formattedLastUpdatedAt:"11/16/2021",sidebarPosition:1,frontMatter:{},sidebar:"lego",previous:{title:"Small Basic",permalink:"/lego/programming/small-basic"}},m=[{value:"Why use Pybricks?",id:"why-use-pybricks",children:[]},{value:"Getting Started",id:"getting-started",children:[]},{value:"Using Pybricks",id:"using-pybricks",children:[{value:"HiTechnic Color Sensor",id:"hitechnic-color-sensor",children:[]}]}],f={toc:m};function d(e){var r=e.components,t=(0,o.Z)(e,l);return(0,a.kt)("wrapper",(0,n.Z)({},f,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"pybricks"},"Pybricks"),(0,a.kt)("p",null,"Pybricks is an alternative method of programming for EV3 Mindstorms endorsed by\nLEGO\xae."),(0,a.kt)("p",null,"For more information, visit ",(0,a.kt)("a",{parentName:"p",href:"https://pybricks.com/"},"pybricks.com"),"."),(0,a.kt)("h2",{id:"why-use-pybricks"},"Why use Pybricks?"),(0,a.kt)("p",null,"You might already be familiar with EV3-G and EV3 Classroom."),(0,a.kt)(i.Z,{defaultValue:"ev3-g",values:[{label:"EV3-G",value:"ev3-g"},{label:"EV3 Classroom",value:"ev3-classroom"},{label:"Pybricks",value:"pybricks"}],mdxType:"Tabs"},(0,a.kt)(s.Z,{value:"ev3-g",mdxType:"TabItem"},(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"/img/docs/lego/ev3_g.png",alt:"Screenshot of EV3-G"}))),(0,a.kt)(s.Z,{value:"ev3-classroom",mdxType:"TabItem"},(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"/img/docs/lego/ev3_classroom.png",alt:"Screenshot of EV3 Classroom"}))),(0,a.kt)(s.Z,{value:"pybricks",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"#!/usr/bin/env pybricks-micropython\nfrom pybricks.hubs import EV3Brick\nfrom pybricks.ev3devices import Motor\nfrom pybricks.parameters import Port\n\n# Create your objects here\n\n# Initialize the EV3 Brick.\nev3 = EV3Brick()\n\n# Initialize a motor at port B.\ntest_motor = Motor(Port.B)\n\n# Write your program here\n\n# Play a sound.\nev3.speaker.beep()\n\n# Run the motor up to 500 degrees per second.\n# To a target angle of 90 degrees.\ntest_motor.run_target(500, 90)\n\n# Play another beep sound.\nev3.speaker.beep(frequency=1000, duration=500)\n")))),(0,a.kt)("p",null,"However, they both come with their sets of issues. For example, EV3-G is known\nto be very laggy, particularly with large codebases; and EV3 Classroom does not\nsupport the use of HiTechnic Color Sensors."),(0,a.kt)("p",null,"Pybricks uses Python, a text-based programming language, allowing for much more\ncustomisation at the expense of a greater learning curve. It is also based on\nev3dev, a very mature open-source library."),(0,a.kt)("p",null,"Note that Pybricks requires the use of a MicroSD card as it needs to be run on\ncustom firmware."),(0,a.kt)("h2",{id:"getting-started"},"Getting Started"),(0,a.kt)("p",null,"The Pybricks team has already written a very well-documented tutorial on how to\nget started ",(0,a.kt)("a",{parentName:"p",href:"https://pybricks.com/install/mindstorms-ev3/installation/"},"here"),"."),(0,a.kt)("p",null,"You would need to flash the firmware onto a MicroSD card and set-up the Visual\nStudio Code IDE for EV3 MicroPython development."),(0,a.kt)("h2",{id:"using-pybricks"},"Using Pybricks"),(0,a.kt)("p",null,"The full documentation is available ",(0,a.kt)("a",{parentName:"p",href:"https://docs.pybricks.com/en/latest/"},"here"),"."),(0,a.kt)("p",null,"Instructions on how to interface with EV3 devices can be found more specifically\n",(0,a.kt)("a",{parentName:"p",href:"https://docs.pybricks.com/en/latest/ev3devices.html"},"here")," and there is also a ",(0,a.kt)("inlineCode",{parentName:"p"},"DriveBase")," class that you\ncan use ",(0,a.kt)("a",{parentName:"p",href:"https://docs.pybricks.com/en/latest/robotics.html"},"here"),"."),(0,a.kt)("h3",{id:"hitechnic-color-sensor"},"HiTechnic Color Sensor"),(0,a.kt)("p",null,"As the HiTechnic Color Sensor is not an official product provided by Lego,\nPybricks does not natively support it. However, we can still use it as the\nev3dev community has already written code to work with it."),(0,a.kt)("p",null,"The documentation for using ev3dev sensors with Pybricks can be found\n",(0,a.kt)("a",{parentName:"p",href:"https://docs.pybricks.com/en/latest/iodevices/ev3devsensor.html"},"here"),"."),(0,a.kt)("p",null,"Conveniently, someone has also written code to use the Hitechnic Color Sensor at\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/ev3dev/ev3dev/issues/1292#issuecomment-508627948"},"this random GitHub issue"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'from pybricks.ev3devio import Ev3devSensor\n\n\nclass HTColorSensor(Ev3devSensor):\n    _ev3dev_driver_name = "ht-nxt-color-v2"\n    _number_of_values = 4\n\n    def _open_files(self):\n        super()._open_files()\n        self._command_file = open(self.path + "command", "w")\n\n    def _close_files(self):\n        super()._close_files()\n        self._command_file.close()\n\n    # Set the scan frequency to 50 Hz.\n    def set_frequency_50hz(self):\n        self._command_file.write("50HZ")\n        self._command_file.flush()\n\n    # Set the scan frequency to 60 Hz.\n    def set_frequency_60hz(self):\n        self._command_file.write("60HZ")\n        self._command_file.flush()\n\n    # Returns a tuple of color values: (red, blue, green, white). Ranges from 0 to 255 for each.\n    def rgbw(self):\n        self._mode("RGB")\n        errors = 0\n        while True:\n            try:\n                return self._value(0), self._value(1), self._value(2), self._value(3)\n            except:\n                errors += 1  # may raise ENODEV error\n                # returns tuple of zeros if there are two consecutive errors\n                if errors > 1:\n                    return 0, 0, 0, 0\n\n    # Returns the color index. Ranges from 0 to 17.\n    def color(self):\n        self._mode("COLOR")\n        errors = 0\n        while True:\n            try:\n                return self._value(0)\n            except:\n                errors += 1  # may raise ENODEV error\n                # returns zero if there are two consecutive errors\n                if errors > 1:\n                    return 0\n')),(0,a.kt)("p",null,"You can use it like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"ht_color_sensor = HTColorSensor(Port.S1)  # initialise sensor at port 1\n\ncolor = ht_color_sensor.color()\nprint(color)  # prints number from 0 to 17 corresponding to the detected color\n\nr, g, b, w = ht_color_sensor.rgbw()\nprint(r, g, b, w)  # prints the raw values for red, green, blue, and white\n")))}d.isMDXComponent=!0},6010:function(e,r,t){function n(e){var r,t,o="";if("string"==typeof e||"number"==typeof e)o+=e;else if("object"==typeof e)if(Array.isArray(e))for(r=0;r<e.length;r++)e[r]&&(t=n(e[r]))&&(o&&(o+=" "),o+=t);else for(r in e)e[r]&&(o&&(o+=" "),o+=r);return o}function o(){for(var e,r,t=0,o="";t<arguments.length;)(e=arguments[t++])&&(r=n(e))&&(o&&(o+=" "),o+=r);return o}t.d(r,{Z:function(){return o}})}}]);